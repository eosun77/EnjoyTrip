<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.member.model.mapper.MemberMapper">

	<resultMap type="memberDto" id="member">
		<result column="uid" property="userId"/>
		<result column="name" property="userName"/>
	</resultMap>
	
	<resultMap type="memberDto" id="memberAll" extends="member">
		<result column="password" property="userPwd"/>
		<result column="email" property="email"/>
		<result column="register_time" property="joinDate"/>
		
		<result column="addr" property="addr"/>
		<result column="addr2" property="addr2"/>
		<result column="zipcode" property="zipCode"/>
	</resultMap>


	<!-- join  -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(uid)
		from user
		where uid = #{userid}
	</select>
	
	<select id="nameCheck" parameterType="String" resultType="int">
		select count(name)
		from user
		where name = #{userName}
	</select>
	
	<select id="emailCheck" parameterType="String" resultType="int">
		select count(email)
		from user
		where email = #{userEmail}
	</select>
	
	
	
	
	<insert id="joinMember" parameterType="memberDto">
		insert into user (uid,password, name, email, addr, addr2, zipcode )
		values (
		#{userId},
		#{userPwd},
		#{userName},
		#{email},
		#{addr},
		#{addr2},
		#{zipCode}
		)
		<!-- Dto수정  -->
	</insert>
	

<!-- 	<select id="loginMember" parameterType="map" resultMap="member">
		select user_id, user_name
		from members
		where user_id = #{userid} and user_password = #{userpwd}
	</select>
	
	<select id="listMember" resultMap="memberAll">
		select user_name, user_id, user_password, email_id, email_domain, join_date
		from members
		order by join_date
	</select>
	
	<select id="getMember" parameterType="string" resultMap="memberAll">
		select user_id, user_name, user_password, email_id, email_domain, join_date
		from members
		where user_id = #{userId}
	</select>
	
	<update id="updateMember" parameterType="memberDto">
		update members
		<trim prefix="set" suffixOverrides=",">
			<if test="userPwd != null">user_password = #{userPwd},</if>
			<if test="emailId != null">email_id = #{emailId},</if>
			<if test="emailDomain != null">email_domain = #{emailDomain},</if>
		</trim>
		where user_id = #{userId}
	</update>
	
	<delete id="deleteMember" parameterType="String">
		delete from members
		where user_id = #{userId}
	</delete> -->
	
</mapper>